The ``2-matrix_divided`` module
=========================

Using ``matrix_divided``
_______________________

This is an test text file. These are the test cases:

	##### Importing the function from the module #####
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	##### Check that the file is executable #####
	>>> import os
	>>> os.access('2-matrix_divided.py', os.X_OK)
	True

	##### Check for the documentation of the function #####
	>>> len(__import__("2-matrix_divided").matrix_divided.__doc__) > 10
	True

	##### CHeck that the README file exists #####
	>>> cwd = os.getcwd()
	>>> check_readme = cwd + '/README.md'
	>>> os.path.exists(check_readme)
	True

	##### Check for pep8 style #####
	>>> os.popen("pep8 2-matrix_divided.py").read()
	''

	##### Check for a newline at the end of the file #####
	>>> os.popen("cat -e 2-matrix_divided.py | tail -1").read()[-1]
	'\n'

	##### Check for the file has a shebang #####
	>>> os.popen("cat 2-matrix_divided.py | head -1").read()
	'#!/usr/bin/python3\n'

	##### Check division by zero #####
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	##### Check division element with integer and result float #####
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	##### Check is dividend is not a matrix #####
	>>> matrix_divided(10, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	##### Check is dividend is not a matrix and string data type #####
	>>> matrix_divided("Holberton", 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	##### Check is divisor is not a int or float #####
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "string")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	##### Check for same length of elements inside matrix #####
	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

	##### Check when a divisor is passed as diferent data type #####
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
	Traceback (most recent call last):
	...
	TypeError: div must be a number
